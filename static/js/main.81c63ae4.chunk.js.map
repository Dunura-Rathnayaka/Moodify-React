{"version":3,"sources":["components/Login.jsx","utils/StateProvider.jsx","utils/Constants.js","components/Playlists.jsx","components/Sidebar.jsx","components/Navbar.jsx","components/Body.jsx","components/CurrentTrack.jsx","components/PlayerControls.jsx","components/Volume.jsx","components/Footer.jsx","components/Spotify.jsx","App.js","utils/reducer.js","index.js"],"names":["Login","React","createElement","Container","src","alt","onClick","handleClick","window","location","href","concat","join","styled","div","_templateObject","_taggedTemplateLiteral","StateContext","createContext","StateProvider","_ref","children","initialState","reducer","Provider","value","useReducer","useStateProvider","useContext","reducerCases","Playlists","token","playlists","dispatch","useEffect","async","response","axios","get","headers","Authorization","items","data","map","name","id","type","getPlaylistData","_ref2","key","selectedPlaylistId","Sidebar","className","MdHomeFilled","MdSearch","IoLibrary","MdMood","Navbar","navBackground","userInfo","FaSearch","placeholder","CgProfile","userName","Body","headerBackground","selectedPlaylist","console","log","_response$data$images","uri","description","startsWith","image","images","url","tracks","_track$album$images$","track","artists","artist","album","duration","duration_ms","context_uri","track_number","error","getInitialPlaylist","Fragment","AiFillClockCircle","_ref3","index","put","offset","position","position_ms","status","currentlyPlaying","playerState","playTrack","ms","minutes","Math","floor","seconds","toFixed","msToMinutesAndSeconds","_ref4","CurrentTrack","item","getCurrentTrack","PlayerControls","changeTrack","post","changeState","state","BsShuffle","CgPlayTrackPrev","BsFillPauseCircleFill","BsFillPlayCircleFill","CgPlayTrackNext","FiRepeat","Volume","min","max","onMouseUp","e","params","volume_percent","parseInt","target","setVolume","Footer","Spotify","bodyRef","useRef","setNavBackground","useState","setHeaderBackground","userId","display_name","getUserInfo","ref","onScroll","bodyScrolled","current","scrollTop","App","hash","substring","split","action","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.81c63ae4.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Login() {\r\n  const handleClick = () => {\r\n    const clientId = \"466e1b1dc6774871af909df19197438c\";\r\n    const redirectUrl = \"http://localhost:3000/\";\r\n    const apiUrl = \"https://accounts.spotify.com/authorize\";\r\n    const scope = [\r\n      'user-read-email', \r\n      'user-read-private', \r\n      'user-modify-playback-state', \r\n      'user-read-playback-state', \r\n      'user-read-currently-playing',\r\n      'user-read-recently-played',\r\n      'user-read-playback-position',\r\n      'user-top-read',\r\n    ];\r\n    window.location.href = `${apiUrl}?client_id=${clientId}&redirect_uri=${redirectUrl}&scope=${scope.join(\r\n      \" \"\r\n    )}&response_type=token&show_daialog=true`; \r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <img src='./images/MOODIFY large.png' alt='MOODIFY' />\r\n      <button onClick={handleClick}>Connect Spotify</button> \r\n    </Container>  \r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: #A24502;\r\n  gap: 5rem;\r\n\r\n  img {\r\n    height: 80vh;\r\n  }\r\n\r\n  button {\r\n    padding: 1rem 5rem;\r\n    border-radius: 5rem;\r\n    border: none;\r\n    background-color: black;\r\n    color: #FFA700;\r\n    font-size: 1.4rem;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { createContext, useContext, useReducer } from \"react\";\r\nimport React from 'react';\r\n\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({children, initialState, reducer }) => (\r\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateProvider = () => useContext(StateContext);\r\n\r\n","export const reducerCases = {\r\n    SET_TOKEN: \"SET_TOKEN\",\r\n    SET_PLAYLISTS: \"SET_PLAYLISTS\",\r\n    SET_USER: \"SET_USER\",\r\n    SET_PLAYLIST: \"SET_PLAYLIST\",\r\n    SET_PLAYING: \"SET_PLAYING\",\r\n    SET_PLAYER_STATE: \"SET_PLAYER_STATE\",\r\n    SET_PLAYLIST_ID: \"SET_PLAYLIST_ID\",\r\n};","import React, { useEffect } from 'react';\r\nimport { useStateProvider } from \"../utils/StateProvider\";\r\nimport axios from 'axios';\r\nimport { reducerCases } from '../utils/Constants';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Playlists() {\r\n    const [{ token, playlists }, dispatch]  = useStateProvider();\r\n    useEffect(() => {\r\n        const getPlaylistData = async () => {\r\n            const response = await axios.get(\r\n                \"https://api.spotify.com/v1/me/playlists\", \r\n                {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        );\r\n        const { items } = response.data;\r\n        const playlists = items.map(({ name, id }) =>{\r\n            return { name, id };\r\n        });\r\n        dispatch({type:reducerCases.SET_PLAYLISTS, playlists});\r\n    };\r\n        getPlaylistData();\r\n    }, [token, dispatch]);\r\n  \r\n  const changeCurrentPlaylist = (selectedPlaylistId) => {\r\n    dispatch({type:reducerCases.SET_PLAYLIST_ID, selectedPlaylistId});\r\n  };\r\n    return (\r\n  <Container>\r\n    <ul>\r\n        {playlists.map(({ name, id }) => {\r\n                return <li key={id} onClick={() => changeCurrentPlaylist(id)}>{name}</li>;\r\n                })}   \r\n    </ul>\r\n  </Container>\r\n)\r\n}\r\n\r\nconst Container = styled.div`\r\nheight: 100%;\r\noverflow: hidden;\r\nul {\r\n    list-style-type: none;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0.8rem;\r\n    padding: 1rem;\r\n    height: 52vh;\r\n    max-height: 100%;\r\n    overflow: auto;\r\n    &::-webkit-scrollbar{\r\n        width: 0.7rem;\r\n        &-thumb {\r\n            background-color: rgba(255, 255, 255, 0.6);\r\n        }\r\n    }\r\n    li {\r\n      display: flex;\r\n      gap: 1rem;\r\n      cursor: pointer;\r\n      transition: 0.3s ease-in-out;\r\n      &:hover{\r\n        color: White;\r\n        }\r\n      }\r\n    }\r\n    `;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {IoLibrary} from 'react-icons/io5'\r\nimport {MdHomeFilled,MdSearch,MdMood} from 'react-icons/md'\r\nimport Playlists from './Playlists'\r\n\r\nexport default function Sidebar() {\r\n  return <Container>\r\n    <div className=\"top__links\">\r\n      <div className=\"logo\">\r\n      <img src='./images/MOODIFY Body.svg' alt='MOODIFY body' />\r\n      </div>\r\n      <ul>\r\n        <li> \r\n            <MdHomeFilled />\r\n          <span>Home</span> \r\n        </li>\r\n        <li> \r\n            <MdSearch />\r\n          <span>Search</span> \r\n        </li>\r\n        <li> \r\n            <IoLibrary />\r\n          <span>Your Library</span> \r\n        </li>\r\n        <li> \r\n            <MdMood />\r\n          <span>Mood</span> \r\n        </li>\r\n      </ul>\r\n    </div> \r\n    <Playlists />\r\n  </Container>\r\n}\r\n/*the above code is for the side bar components :3*/\r\n/*this is the syle for the sidebar*/\r\nconst Container = styled.div`\r\nbackground: linear-gradient(transparent, rgba(236,88,0,1)); \r\nbackground-color: rgb(0, 0, 0);\r\ncolor: #2AAA8A;\r\ndisplay: flex;\r\nflex-direction: column;\r\nheight: 100%;\r\nwidth: 100%;\r\n.top__links {\r\n  display: flex;\r\n  flex-direction: column;\r\n.logo {\r\n  text-align: center;\r\n  margin: 1rem 0;\r\n  img{\r\n    max-inline-size: 100%;\r\n    block-size: auto;\r\n  }\r\n}\r\nul {\r\n  list-style-type: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  padding: 1rem;\r\n  li {\r\n    display: flex;\r\n    gap: 1rem;\r\n    cursor: pointer;\r\n    transition: 0.3s ease-in-out;\r\n    &:hover{\r\n      color: White;\r\n      }\r\n    }\r\n  }\r\n}\r\n`;","import React from 'react'\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport styled from 'styled-components'\r\nimport { useStateProvider } from '../utils/StateProvider';\r\n\r\nexport default function Navbar({navBackground}) {\r\n    const [{ userInfo } ]  = useStateProvider();\r\n  return <Container navBackground={navBackground}>\r\n        <div className=\"search__bar\">\r\n            <FaSearch />\r\n            <input type=\"text\" placeholder=\"Artists, Songs, or Podcasts\" />\r\n        </div>\r\n        <div className=\"avatar\">\r\n            <a href=\"#\">\r\n                <CgProfile />\r\n                <span>{userInfo?.userName} </span>\r\n            </a>\r\n        </div>\r\n  </Container>  \r\n}\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\npadding: 2rem;\r\nposition: sticky;\r\ntop: 0;\r\ntransition: 0.3s ease-in-out;\r\nbackground-color: ${({ navBackground }) =>\r\n    navBackground ? \"rgba(0,0,0,0.7)\" : \"none\"};\r\n.search__bar {\r\n    background-color: white;\r\n    width: 30%;\r\n    padding: 0.4rem 1rem;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.5rem;\r\n    input {\r\n        border: none;\r\n        height: 2rem;\r\n        width: 100%;\r\n        &:focus {\r\n            outline: none;\r\n        }\r\n    }\r\n}  \r\n.avatar {\r\n    background-color: black;\r\n    padding: 0.3rem 0.4rem;\r\n    padding-right: 1rem;\r\n    border-radius: 2rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    a {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        gap: 0.5rem;\r\n        text-decoration: none;\r\n        color: white;\r\n        font-weight: bold;\r\n        svg {\r\n            font-size: 1.3rem;\r\n            background-color: #282828;\r\n            padding: 0.2rem;\r\n            border-radius: 1rem;\r\n            color: #c7c5c5;\r\n        }\r\n\r\n    }\r\n}\r\n`;\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AiFillClockCircle } from 'react-icons/ai'\r\nimport { useStateProvider } from '../utils/StateProvider';\r\nimport axios from 'axios';\r\nimport { reducerCases } from '../utils/Constants';\r\n\r\nexport default function Body({headerBackground}) {\r\n  const [{ token, selectedPlaylistId, selectedPlaylist }, dispatch] = useStateProvider();\r\n  \r\n  useEffect(() => {\r\n    const getInitialPlaylist = async () => {\r\n      console.log(selectedPlaylistId);\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.spotify.com/v1/playlists/${selectedPlaylistId}`,\r\n          {\r\n            headers: {\r\n              Authorization: 'Bearer ' + token,\r\n              'Content-Type': 'application/json',\r\n            },\r\n          }\r\n        );\r\n        if (response.data) {\r\n          const selectedPlaylist = {\r\n            id: response.data.id, \r\n            uri: response.data.uri,\r\n            name: response.data.name,\r\n            description: response.data.description.startsWith(\"<a\")\r\n              ? \"\"\r\n              : response.data.description,\r\n            image: response.data.images[0]?.url || \"\", // Added optional chaining\r\n            tracks: response.data.tracks.items.map(({ track }) => ({\r\n              id: track.id,\r\n              name: track.name,\r\n              artists: track.artists.map((artist) => artist.name),\r\n              image: track.album.images[2]?.url || \"\", // Added optional chaining\r\n              duration: track.duration_ms,\r\n              album: track.album.name,\r\n              context_uri: track.album.uri, \r\n              track_number: track.track_number,\r\n            })),\r\n          };\r\n          dispatch({ type: reducerCases.SET_PLAYLIST, selectedPlaylist });\r\n        } else {\r\n          console.error(\"No data in response\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching playlist\", error);\r\n      }\r\n    };\r\n    if (selectedPlaylistId) {\r\n      getInitialPlaylist();\r\n    }\r\n  }, [token, dispatch, selectedPlaylistId]);\r\n\r\n  /*converting seconds into minutes for the music duration*/\r\n  const msToMinutesAndSeconds = (ms) => {\r\n    const minutes = Math.floor(ms / 60000);\r\n    const seconds = ((ms % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  }\r\n\r\n  const playTrack = async (id, name, artists, image, context_uri, track_number) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `https://api.spotify.com/v1/me/player/play`,\r\n        {\r\n          context_uri,\r\n          offset: {\r\n            position: track_number - 1,\r\n          },\r\n          position_ms: 0,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n      if (response.status === 204) {\r\n        const currentlyPlaying = {\r\n          id,\r\n          name,\r\n          artists, \r\n          image,\r\n        };\r\n        dispatch({ type: reducerCases.SET_PLAYING, currentlyPlaying });\r\n        dispatch({ type: reducerCases.SET_PLAYER_STATE, playerState: true });   \r\n      } else {\r\n        dispatch({ type: reducerCases.SET_PLAYER_STATE, playerState: true });\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error playing track\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container headerBackground={headerBackground}>\r\n      {selectedPlaylist && (\r\n        <>\r\n          <div className=\"playlist\">\r\n            <div className=\"image\">\r\n              <img src={selectedPlaylist.image} alt=\"selectedplaylists\" />\r\n            </div>\r\n            <div className=\"details\">\r\n              <span className='type'>PLAYLIST</span>\r\n              <h1 className='title'>{selectedPlaylist.name}</h1>\r\n              <p className='description'>{selectedPlaylist.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"list\">\r\n            <div className=\"header__row\">\r\n              <div className=\"col\">\r\n                <span>#</span>\r\n              </div>\r\n              <div className=\"col\">\r\n                <span>TITLE</span>\r\n              </div>\r\n              <div className=\"col\">\r\n                <span>ALBUM</span>\r\n              </div>\r\n              <div className=\"col\">\r\n                <span>\r\n                  <AiFillClockCircle />\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div className=\"tracks\">\r\n              {selectedPlaylist.tracks.map(({\r\n                id,\r\n                name,\r\n                artists,\r\n                image,\r\n                duration,\r\n                album,\r\n                context_uri,\r\n                track_number\r\n              }, index) => {\r\n                return (\r\n                  <div className=\"row\" key={id} onClick={() => playTrack(id, name, artists, image, context_uri, track_number)}>\r\n                    <div className=\"col\">\r\n                      <span>{index + 1}</span>\r\n                    </div>\r\n                    <div className=\"col detail\">\r\n                      <div className=\"image\">\r\n                        <img src={image} alt=\"track\" />\r\n                      </div>\r\n                      <div className=\"info\">\r\n                        <span className=\"name\">{name}</span>\r\n                        <span className=\"artists\">{artists.join(', ')}</span>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <span className=\"album\">{album}</span>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                      <span>{msToMinutesAndSeconds(duration)} </span>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              })}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\n\r\n.playlist {\r\n  margin: 0 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 2rem;\r\n  .image {\r\n    img {\r\n      height: 15rem;\r\n      box-shadow: rgba(0, 0, 0, 0.25) 0px 25px;\r\n    }\r\n  }\r\n.details {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1rem;\r\n  color: #e0dede;\r\n  .title {\r\n    color: white;\r\n    font-size: 4rem;\r\n    }\r\n  }\r\n}\r\n.list { \r\n  .header__row {\r\n    display: grid;\r\n    grid-template-columns: 0.3fr 3fr 2fr 0.1fr;\r\n    color: #dddcdc;\r\n    margin: 1rem 0 0 0 ;\r\n    position: sticky;\r\n    top: 15vh;\r\n    padding: 1rem 3rem;\r\n    transition: 0.3s ease-in-out;\r\n    background-color: ${({ headerBackground }) =>\r\n      headerBackground ? \"#000000dc\" : \"none\"};\r\n  }\r\n  .tracks {\r\n    margin: 0 2rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 5rem;\r\n    .row {\r\n      padding: 0.5rem 1rem;\r\n      display: grid;\r\n      grid-template-columns: 0.3fr 3.1fr 1.9fr 0.1fr;\r\n      &:hover {\r\n        background-color:rgba(0, 0, 0, 0.7);\r\n      }\r\n      .col {\r\n        display: flex;\r\n        align-items: center;\r\n        color: #dddcdc;\r\n        img {\r\n          height: 40px;\r\n        }\r\n      }\r\n      .detail {\r\n        display: flex;\r\n        gap: 1rem;\r\n        .info {\r\n          display: flex; \r\n          flex-direction: column;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useStateProvider } from '../utils/StateProvider';\r\nimport axios from 'axios';\r\nimport { reducerCases } from '../utils/Constants';\r\n\r\nexport default function CurrentTrack() {\r\n    const [{ token, currentlyPlaying }, dispatch]  = useStateProvider();\r\n    console.log(\"component\", currentlyPlaying);\r\n    useEffect(() => {\r\n        const getCurrentTrack = async () => {\r\n            const response = await axios.get(\r\n                \"https://api.spotify.com/v1/me/player/currently-playing\", \r\n                {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        );\r\n       if (response.data !== \"\") {\r\n        const { item } = response.data;\r\n        const currentlyPlaying = {\r\n            id: item.id,\r\n            name: item.name,\r\n            artists: item.artists.map((artist) => artist.name),\r\n            image: item.album.images[2].url,\r\n        };  \r\n      dispatch({type:reducerCases.SET_PLAYING, currentlyPlaying});\r\n        }\r\n    };\r\n    getCurrentTrack();\r\n    }, [token, dispatch]);\r\n  return <Container>\r\n    {\r\n        currentlyPlaying && (\r\n            <div className='track'>\r\n                <div className='track__image'>\r\n                    <img src={currentlyPlaying.image} alt=\"currentlyPlaying\" />\r\n                </div>\r\n                <div className='track__info'>\r\n                    <h4>{currentlyPlaying.name}</h4>\r\n                    <h6>{currentlyPlaying.artists.join(\", \")}</h6>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n  </Container>;\r\n}\r\n\r\nconst Container = styled.div`\r\ndisplay: flex;\r\n  align-items: center;\r\n  .track {\r\n    display: flex;\r\n    align-items: center;\r\n    .track__image {\r\n      margin-right: 1rem;\r\n      img {\r\n        height: 50px;\r\n        width: 50px;\r\n        object-fit: cover;\r\n      }\r\n    }\r\n    .track__info {\r\n      display: flex;\r\n      flex-direction: column;\r\n      h4{\r\n      margin: 0;\r\n        color: white; /* Ensure text is visible */\r\n      } \r\n      h6 {\r\n       margin: 0;\r\n           color: grey;\r\n        } \r\n    }\r\n  }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {\r\n    BsFillPlayCircleFill,\r\n    BsFillPauseCircleFill,\r\n    BsShuffle,\r\n} from 'react-icons/bs';\r\nimport { CgPlayTrackNext, CgPlayTrackPrev } from 'react-icons/cg';\r\nimport { FiRepeat } from 'react-icons/fi';\r\nimport { useStateProvider } from '../utils/StateProvider';\r\nimport axios from 'axios';\r\nimport { reducerCases } from '../utils/Constants';\r\n\r\nexport default function PlayerControls() {\r\n    const [{ token, playerState, selectedPlaylist }, dispatch] = useStateProvider();\r\n\r\n    const changeTrack = async (type) => {\r\n        if (selectedPlaylist) {\r\n            await axios.post(\r\n                `https://api.spotify.com/v1/me/player/${type}`,\r\n                {\r\n                    context_uri: selectedPlaylist.uri,\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: 'Bearer ' + token,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            const response = await axios.get(\r\n                \"https://api.spotify.com/v1/me/player/currently-playing\",\r\n                {\r\n                    headers: {\r\n                        Authorization: 'Bearer ' + token,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                }\r\n            );\r\n\r\n            if (response.data !== \"\") {\r\n                const { item } = response.data;\r\n                const currentlyPlaying = {\r\n                    id: item.id,\r\n                    name: item.name,\r\n                    artists: item.artists.map((artist) => artist.name),\r\n                    image: item.album.images[2].url || \"\",\r\n                };\r\n                dispatch({ type: reducerCases.SET_PLAYING, currentlyPlaying });\r\n            } else {\r\n                dispatch({ type: reducerCases.SET_PLAYING, currentlyPlaying: null });\r\n            }\r\n        }\r\n    };\r\n\r\n    const changeState = async () => {\r\n        const state = playerState ? \"pause\" : \"play\";\r\n        await axios.put(\r\n            `https://api.spotify.com/v1/me/player/${state}`,\r\n            {},\r\n            {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            }\r\n        );\r\n        dispatch({ type: reducerCases.SET_PLAYER_STATE, playerState: !playerState });\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <div className=\"shuffle\">\r\n                <BsShuffle />\r\n            </div>\r\n            <div className=\"previous\">\r\n                <CgPlayTrackPrev onClick={() => changeTrack(\"previous\")} />\r\n            </div>\r\n            <div className=\"state\">\r\n                {playerState ? <BsFillPauseCircleFill onClick={changeState} /> : <BsFillPlayCircleFill onClick={changeState} />}\r\n            </div>\r\n            <div className=\"next\">\r\n                <CgPlayTrackNext onClick={() => changeTrack(\"next\")} />\r\n            </div>\r\n            <div className=\"repeat\">\r\n                <FiRepeat />\r\n            </div>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 2rem;\r\n    svg {\r\n        color: #b3b3b3;\r\n        transition: 0.2s ease-in-out;\r\n        &:hover {\r\n            color: white;\r\n        } \r\n    }\r\n    .state {\r\n        svg {\r\n            color: white;\r\n        }\r\n    }\r\n    .previous, .next, .state {\r\n        font-size: 2rem;\r\n    }\r\n`;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useStateProvider } from '../utils/StateProvider';\r\nimport axios from 'axios';\r\n\r\nexport default function Volume() {\r\n    const [{ token }]  = useStateProvider();\r\n    const setVolume = async (e) => {\r\n        await axios.put(\r\n            `https://api.spotify.com/v1/me/player/volume`,\r\n            {}, \r\n            {\r\n                params: {\r\n                    volume_percent: parseInt(e.target.value)\r\n                },   \r\n            headers: {\r\n                Authorization: 'Bearer ' + token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n    );\r\n    }\r\n  return (\r\n    <Container>\r\n        <input type='range' min={0} max={100} onMouseUp={(e) => setVolume(e)} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-content: center;\r\n    input {\r\n        width: 15rem;\r\n        border-radius: 2rem;\r\n        height: 0.5rem;\r\n        }\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport CurrentTrack from './CurrentTrack';\r\nimport PlayerControls from './PlayerControls';\r\nimport Volume from './Volume';\r\n\r\nexport default function Footer() {\r\n  return (\r\n    /* inputing the PlayerControls data into the footer */\r\n    <Container>\r\n      <CurrentTrack />\r\n      <PlayerControls />\r\n      <Volume />\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst Container = styled.div`\r\nbackground: linear-gradient(transparent, rgba(0,0,0,1)); \r\nbackground-color: #181818; \r\nheight: 50%; \r\nwidth: 100%; \r\nborder-top:1px solid #282828; \r\ndisplay: grid; \r\ngrid-template-columns: 1fr 2fr 1fr; \r\nalign-items: center; \r\njustify-content: center; \r\npadding: 0 1rem;\r\n`;\r\n","import React, {useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Sidebar from './Sidebar';\r\nimport Navbar from './Navbar';\r\nimport Body from './Body';\r\nimport Footer from './Footer';\r\nimport { useStateProvider } from '../utils/StateProvider';\r\nimport axios from 'axios';\r\nimport { reducerCases } from '../utils/Constants';\r\n\r\nexport default function Spotify() {\r\n    const [{ token }, dispatch]  = useStateProvider();\r\nconst bodyRef = useRef();\r\nconst [navBackground, setNavBackground] = useState(false);\r\nconst [headerBackground, setHeaderBackground] = useState(false);\r\nconst bodyScrolled = () => {\r\n    bodyRef.current.scrollTop >= 30\r\n    ? setNavBackground(true)\r\n    : setNavBackground(false);\r\n    bodyRef.current.scrollTop >= 268\r\n    ? setHeaderBackground(true)\r\n    : setHeaderBackground(false);\r\n};\r\n    useEffect(() => {\r\n        const getUserInfo = async ()=> {\r\n            const {data} = await axios.get(\"https://api.spotify.com/v1/me\", {\r\n                headers: {\r\n                    Authorization: 'Bearer ' + token,\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n        const userInfo = {\r\n            userId: data.id,\r\n            userName: data.display_name,\r\n        };\r\n    \r\n        dispatch({type: reducerCases.SET_USER, userInfo });\r\n    };\r\n    getUserInfo();\r\n    \r\n    },[dispatch, token] )\r\n    return (\r\n    <Container>\r\n        <div className=\"spotify__body\">\r\n            <Sidebar />\r\n            <div className=\"body\" ref={bodyRef} onScroll={bodyScrolled}>\r\n            <Navbar navBackground={navBackground}/>\r\n                <div className=\"body__contents\">\r\n                    <Body headerBackground={headerBackground}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"spotify__footer\">\r\n            <Footer />\r\n        </div>\r\n    </Container>\r\n    );\r\n}\r\n\r\n/*this is the syle for the overall body*/\r\nconst Container = styled.div`\r\n  max-width: 100vw;\r\n  max-height: 100vh;\r\n  overflow: hidden;\r\n  display: grid;\r\n  grid-template-rows: 85vh 15vw;\r\n\r\n  .spotify__body {\r\n    display: grid;\r\n    grid-template-columns: 15vw 85vw;\r\n    height: 100%;\r\n    width: 100%;\r\n    background: linear-gradient(transparent, rgba(88, 24, 69, 1));\r\n    background-color: rgb(199, 0, 57);\r\n  }\r\n\r\n  .body {\r\n    height: 100%;\r\n    width: 100%;\r\n    overflow: auto;\r\n\r\n    &::-webkit-scrollbar {\r\n      width: 0.7rem;\r\n\r\n      &-thumb {\r\n        background-color: rgba(255, 255, 255, 0.6);\r\n      }\r\n    }\r\n  }\r\n`;","\nimport React,{useEffect} from 'react';\nimport Login from './components/Login';\nimport { useStateProvider } from './utils/StateProvider';\nimport { reducerCases } from './utils/Constants';\nimport Spotify from './components/Spotify';\n\nexport default function App() {\n  const [{ token }, dispatch] = useStateProvider ();\n  useEffect(() => {\n    const hash = window.location.hash;\n    if (hash) {\n      const token = hash.substring(1).split(\"&\")[0].split(\"=\")[1];\n      \n      dispatch({ type: reducerCases.SET_TOKEN, token });\n    }\n  }, [token, dispatch]);\n  return <div> { token ? <Spotify /> : <Login />}</div>;\n}\n","import { reducerCases } from \"./Constants\";\r\n\r\nexport const initialState = {\r\n    token: null,\r\n    playlists: [],\r\n    userInfo: null,\r\n    selectedPlaylistId: \"7vGgLQ7QTBWZGvyv88Mu25\",\r\n    selectedPlaylist: null,\r\n    currentlyPlaying: null,\r\n    playerState: false,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n       case reducerCases.SET_TOKEN: {\r\n        return {\r\n            ...state,\r\n            token: action.token,\r\n        };\r\n       } \r\n       case reducerCases.SET_PLAYLISTS: {\r\n        return {\r\n            ...state,\r\n            playlists: action.playlists,\r\n        };\r\n       }\r\n       case reducerCases.SET_USER:{\r\n        return {\r\n            ...state,\r\n            userInfo: action.userInfo,\r\n        };\r\n       }\r\n       case reducerCases.SET_PLAYLIST: {\r\n        return {\r\n            ...state,\r\n            selectedPlaylist: action.selectedPlaylist,\r\n        };\r\n       }\r\n       case reducerCases.SET_PLAYING: {\r\n        return {\r\n            ...state,\r\n            currentlyPlaying: action.currentlyPlaying,\r\n        };\r\n       }\r\n       case reducerCases.SET_PLAYER_STATE: {\r\n        return {\r\n            ...state,\r\n            playerState: action.playerState,\r\n        };\r\n       }\r\n       case reducerCases.SET_PLAYLIST_ID: {\r\n        return {\r\n            ...state,\r\n            selectedPlaylistId: action.selectedPlaylistId,\r\n        };\r\n       }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport { StateProvider } from './utils/StateProvider';\nimport reducer, { initialState } from './utils/reducer';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>\n);"],"sourceRoot":""}